<!--Controls:MetroWindow 扁平化UI控件库窗体控件MahApps.Metro-->
<!--Controls:MetroWindow根元素
    xmlns: 命名空间
    x:Class: 将标记连接到任何代码隐藏的分部类声明为分部类定义-->
<Controls:MetroWindow x:Class="Dyd.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dyd"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
        Title="Dynamic desktop" Height="400" Width="400" Loaded="Window_Loaded" ResizeMode="NoResize" Background="White" Closing="Window_Closing" WindowStartupLocation="CenterScreen"  Icon="Dyd.ico">
    <!--Loaded: 窗体加载调用方法  ResizeMode: 是否可以调整窗口的大小  MouseDoubleClick：双击事件  Background:设置背景  Closing: Window的Closing事件，这里通过Window_Closing方法将关闭程序改成最小化到托盘  WindowStartupLocation: 窗口首次显示时的位置  Icon:设置图标-->

    <!--You can add your own controls to LeftWindowsCommands or RightWindowsCommands - by default, buttons have a style automatically applied to them to make them fit in with the rest of the WindowsCommands. As of 0.9, you are no longer limited to just buttons, but any control. Be aware, you’re responsible for styling anything other than buttons.-->
    <Controls:MetroWindow.RightWindowCommands>
        <!--修改标题栏，在标题栏右边添加设置按钮-->
        <Controls:WindowCommands>
            <!--待拓展未实现-->
            <Button Content="settings">
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <!--内容部分-->
    <!--Grid 由列和行组成的灵活的网格区域-->
    <Grid>
        <!--Border 在另一个元素四周绘制边框或背景  BorderBrush:描述外部边框颜色  BorderThickness:描述矩形边框的粗细  HorizontalAlignment:水平对齐方式  VerticalAlignment:垂直对齐-->
        <Border Height="225" Width="400" BorderBrush="Black" BorderThickness="0" HorizontalAlignment="Center" VerticalAlignment="Top">
            <!--MediaElement 包含音频和/或视频的控件  Name：标识名称  Volume：音量  Source:媒体源  LoadedBehavior:获取或设置媒体的加载行为 MediaState-->
            <MediaElement x:Name="media" Height="225" Width="400" Volume="{Binding ElementName=volume,Path=Value}" Source="" MouseDown="media_MouseDown" LoadedBehavior="Manual"/>
        </Border>

        <!--GroupBox 用于创建具有针对用户界面(UI)内容的边框和标题的容器  Header:标头-->
        <GroupBox Header="设置" Height="150" Width="400" Margin="0,225,0,0"  HorizontalAlignment="Center" VerticalAlignment="Top">
            <Grid>
                <!--Label 标签-->
                <Label Content="壁纸" Width="81" Height="25" Margin="10,10,0,0" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                <!--ToggleButton 开关按钮  x:Name:标识名称  Foreground:前景色  BorderBrush:边框背景  RenderTransformOrigin:转换的中心点-->
                <ToggleButton Height="25" Width="40" x:Name="btnFull" Margin="75,10,0,0" Foreground="#FF16DCF0" BorderBrush="#FFA8A8A8" Background="#CC119EDA"  VerticalAlignment="Top" HorizontalAlignment="Left"  Checked="btnFull_Checked" Unchecked="btnFull_Unchecked" RenderTransformOrigin="0.6,-0.76" IsChecked="True"/>
                <Label Content="音量" Width="81" Height="25" Margin="10,36,0,0"  HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                <!--Slider 滑块  Value:初始值设置-->
                <Slider x:Name="volume" Width="80" Height="20" Maximum="1" Margin="80,36,0,0" Value="0.5" HorizontalAlignment="Left"  VerticalAlignment="Top" IsMoveToPointEnabled="True"/>
                <!--Button 按钮 -->
                <Button Content="选择视频" Margin="225,80,85,10" Click="SelectVideo"/>
                <Button Content="设为壁纸" Margin="310,80,0,10" Click="SetWallpaper"/>
            </Grid>
        </GroupBox>
    </Grid>
</Controls:MetroWindow>
